{"version":3,"sources":["example.js","index.js"],"names":["routes","path","exact","sidebar","react_default","a","createElement","main","SidebarExample","react_router_dom","style","display","padding","width","background","listStyleType","to","map","route","index","react_router","key","component","flex","ReactDOM","render","example","document","getElementById"],"mappings":"wLAOMA,EAAS,CACb,CACEC,KAAM,IACNC,OAAO,EACPC,QAAS,kBAAMC,EAAAC,EAAAC,cAAA,qBACfC,KAAM,kBAAMH,EAAAC,EAAAC,cAAA,oBAEd,CACEL,KAAM,aACNE,QAAS,kBAAMC,EAAAC,EAAAC,cAAA,0BACfC,KAAM,kBAAMH,EAAAC,EAAAC,cAAA,yBAEd,CACEL,KAAM,aACNE,QAAS,kBAAMC,EAAAC,EAAAC,cAAA,0BACfC,KAAM,kBAAMH,EAAAC,EAAAC,cAAA,0BA6DDE,MAzDf,WACE,OACEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,KACEL,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEC,QAAS,SACrBP,EAAAC,EAAAC,cAAA,OACEI,MAAO,CACLE,QAAS,OACTC,MAAO,MACPC,WAAY,YAGdV,EAAAC,EAAAC,cAAA,MAAII,MAAO,CAAEK,cAAe,OAAQH,QAAS,IAC3CR,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMO,GAAG,KAAT,SAEFZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMO,GAAG,cAAT,cAEFZ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMO,GAAG,cAAT,eAIHhB,EAAOiB,IAAI,SAACC,EAAOC,GAAR,OAQVf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,IAAKF,EACLlB,KAAMiB,EAAMjB,KACZC,MAAOgB,EAAMhB,MACboB,UAAWJ,EAAMf,aAKvBC,EAAAC,EAAAC,cAAA,OAAKI,MAAO,CAAEa,KAAM,EAAGX,QAAS,SAC7BZ,EAAOiB,IAAI,SAACC,EAAOC,GAAR,OAGVf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CACEC,IAAKF,EACLlB,KAAMiB,EAAMjB,KACZC,MAAOgB,EAAMhB,MACboB,UAAWJ,EAAMX,aC9D/BiB,IAASC,OACTrB,EAAAC,EAAAC,cAACoB,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.cd3cf563.chunk.js","sourcesContent":["import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n// Each logical \"route\" has two components, one for\n// the sidebar and one for the main area. We want to\n// render both of them in different places when the\n// path matches the current URL.\nconst routes = [\n  {\n    path: \"/\",\n    exact: true,\n    sidebar: () => <div>home!</div>,\n    main: () => <h2>Home</h2>\n  },\n  {\n    path: \"/bubblegum\",\n    sidebar: () => <div>bubblegum!</div>,\n    main: () => <h2>Bubblegum</h2>\n  },\n  {\n    path: \"/shoelaces\",\n    sidebar: () => <div>shoelaces!</div>,\n    main: () => <h2>Shoelaces</h2>\n  }\n];\n\nfunction SidebarExample() {\n  return (\n    <Router>\n      <div style={{ display: \"flex\" }}>\n        <div\n          style={{\n            padding: \"10px\",\n            width: \"40%\",\n            background: \"#f0f0f0\"\n          }}\n        >\n          <ul style={{ listStyleType: \"none\", padding: 0 }}>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/bubblegum\">Bubblegum</Link>\n            </li>\n            <li>\n              <Link to=\"/shoelaces\">Shoelaces</Link>\n            </li>\n          </ul>\n\n          {routes.map((route, index) => (\n            // You can render a <Route> in as many places\n            // as you want in your app. It will render along\n            // with any other <Route>s that also match the URL.\n            // So, a sidebar or breadcrumbs or anything else\n            // that requires you to render multiple things\n            // in multiple places at the same URL is nothing\n            // more than multiple <Route>s.\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={route.sidebar}\n            />\n          ))}\n        </div>\n\n        <div style={{ flex: 1, padding: \"10px\" }}>\n          {routes.map((route, index) => (\n            // Render more <Route>s with the same paths as\n            // above, but different components this time.\n            <Route\n              key={index}\n              path={route.path}\n              exact={route.exact}\n              component={route.main}\n            />\n          ))}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default SidebarExample;\n","/**\n  This CodeSandbox has been automatically generated using\n  `codesandboxer`. If you're curious how that happened, you can\n  check out our docs here: https://github.com/noviny/codesandboxer\n\n  If you experience any struggles with this sandbox, please raise an issue\n  on github. :)\n*/\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './example';\n\nReactDOM.render(\n<App />,\ndocument.getElementById('root')\n);"],"sourceRoot":""}